// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ConditionInitParameters struct {

	// (String) Possible Values: CONTAINS_CASE_SENSITIVE, DOES_NOT_CONTAIN_CASE_SENSITIVE, DOES_NOT_EQUAL, DOES_NOT_START_WITH, EQUALS, STARTS_WITH
	// Possible Values: `CONTAINS_CASE_INSENSITIVE`, `CONTAINS_CASE_SENSITIVE`, `DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `DOES_NOT_CONTAIN_CASE_SENSITIVE`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS`, `STARTS_WITH`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) Possible Values: AUTO_ADAPTIVE_THRESHOLD, SEASONAL_BASELINE, STATIC_THRESHOLD
	// Possible Values: `CUSTOM_DEVICE_GROUP_NAME`, `ENTITY_ID`, `HOST_GROUP_NAME`, `HOST_NAME`, `MANAGEMENT_ZONE`, `NAME`, `PROCESS_GROUP_ID`, `PROCESS_GROUP_NAME`, `TAG`
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ConditionObservation struct {

	// (String) Possible Values: CONTAINS_CASE_SENSITIVE, DOES_NOT_CONTAIN_CASE_SENSITIVE, DOES_NOT_EQUAL, DOES_NOT_START_WITH, EQUALS, STARTS_WITH
	// Possible Values: `CONTAINS_CASE_INSENSITIVE`, `CONTAINS_CASE_SENSITIVE`, `DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `DOES_NOT_CONTAIN_CASE_SENSITIVE`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS`, `STARTS_WITH`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) Possible Values: AUTO_ADAPTIVE_THRESHOLD, SEASONAL_BASELINE, STATIC_THRESHOLD
	// Possible Values: `CUSTOM_DEVICE_GROUP_NAME`, `ENTITY_ID`, `HOST_GROUP_NAME`, `HOST_NAME`, `MANAGEMENT_ZONE`, `NAME`, `PROCESS_GROUP_ID`, `PROCESS_GROUP_NAME`, `TAG`
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ConditionParameters struct {

	// (String) Possible Values: CONTAINS_CASE_SENSITIVE, DOES_NOT_CONTAIN_CASE_SENSITIVE, DOES_NOT_EQUAL, DOES_NOT_START_WITH, EQUALS, STARTS_WITH
	// Possible Values: `CONTAINS_CASE_INSENSITIVE`, `CONTAINS_CASE_SENSITIVE`, `DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `DOES_NOT_CONTAIN_CASE_SENSITIVE`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS`, `STARTS_WITH`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// (String) Possible Values: AUTO_ADAPTIVE_THRESHOLD, SEASONAL_BASELINE, STATIC_THRESHOLD
	// Possible Values: `CUSTOM_DEVICE_GROUP_NAME`, `ENTITY_ID`, `HOST_GROUP_NAME`, `HOST_NAME`, `MANAGEMENT_ZONE`, `NAME`, `PROCESS_GROUP_ID`, `PROCESS_GROUP_NAME`, `TAG`
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ConditionsInitParameters struct {

	// (Block Set, Min: 1) (see below for nested schema)
	Condition []ConditionInitParameters `json:"condition,omitempty" tf:"condition,omitempty"`
}

type ConditionsObservation struct {

	// (Block Set, Min: 1) (see below for nested schema)
	Condition []ConditionObservation `json:"condition,omitempty" tf:"condition,omitempty"`
}

type ConditionsParameters struct {

	// (Block Set, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Condition []ConditionParameters `json:"condition" tf:"condition,omitempty"`
}

type DimensionFilterInitParameters struct {

	// (Block Set, Min: 1) (see below for nested schema)
	Filter []FilterInitParameters `json:"filter,omitempty" tf:"filter,omitempty"`
}

type DimensionFilterObservation struct {

	// (Block Set, Min: 1) (see below for nested schema)
	Filter []FilterObservation `json:"filter,omitempty" tf:"filter,omitempty"`
}

type DimensionFilterParameters struct {

	// (Block Set, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Filter []FilterParameters `json:"filter" tf:"filter,omitempty"`
}

type EntityFilterInitParameters struct {

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	Conditions []ConditionsInitParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Dimension key
	// Dimension key of entity type to filter
	DimensionKey *string `json:"dimensionKey,omitempty" tf:"dimension_key,omitempty"`
}

type EntityFilterObservation struct {

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	Conditions []ConditionsObservation `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Dimension key
	// Dimension key of entity type to filter
	DimensionKey *string `json:"dimensionKey,omitempty" tf:"dimension_key,omitempty"`
}

type EntityFilterParameters struct {

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	Conditions []ConditionsParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Dimension key
	// Dimension key of entity type to filter
	// +kubebuilder:validation:Optional
	DimensionKey *string `json:"dimensionKey,omitempty" tf:"dimension_key,omitempty"`
}

type EventTemplateInitParameters struct {

	// (Boolean) Davis® AI will try to merge this event into existing problems, otherwise a new problem will always be created.
	// Davis® AI will try to merge this event into existing problems, otherwise a new problem will always be created.
	DavisMerge *bool `json:"davisMerge,omitempty" tf:"davis_merge,omitempty"`

	// (String) The description of the event to trigger.
	// The description of the event to trigger.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) Possible Values: AVAILABILITY, CUSTOM_ALERT, CUSTOM_ANNOTATION, CUSTOM_CONFIGURATION, CUSTOM_DEPLOYMENT, ERROR, INFO, MARKED_FOR_TERMINATION, RESOURCE, SLOWDOWN
	// Possible Values: `AVAILABILITY`, `CUSTOM_ALERT`, `CUSTOM_ANNOTATION`, `CUSTOM_CONFIGURATION`, `CUSTOM_DEPLOYMENT`, `ERROR`, `INFO`, `MARKED_FOR_TERMINATION`, `RESOURCE`, `SLOWDOWN`
	EventType *string `json:"eventType,omitempty" tf:"event_type,omitempty"`

	// value properties to be attached to the triggered event. (see below for nested schema)
	// Set of additional key-value properties to be attached to the triggered event.
	Metadata []MetadataInitParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// (String) The title of the event to trigger.
	// The title of the event to trigger.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`
}

type EventTemplateObservation struct {

	// (Boolean) Davis® AI will try to merge this event into existing problems, otherwise a new problem will always be created.
	// Davis® AI will try to merge this event into existing problems, otherwise a new problem will always be created.
	DavisMerge *bool `json:"davisMerge,omitempty" tf:"davis_merge,omitempty"`

	// (String) The description of the event to trigger.
	// The description of the event to trigger.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) Possible Values: AVAILABILITY, CUSTOM_ALERT, CUSTOM_ANNOTATION, CUSTOM_CONFIGURATION, CUSTOM_DEPLOYMENT, ERROR, INFO, MARKED_FOR_TERMINATION, RESOURCE, SLOWDOWN
	// Possible Values: `AVAILABILITY`, `CUSTOM_ALERT`, `CUSTOM_ANNOTATION`, `CUSTOM_CONFIGURATION`, `CUSTOM_DEPLOYMENT`, `ERROR`, `INFO`, `MARKED_FOR_TERMINATION`, `RESOURCE`, `SLOWDOWN`
	EventType *string `json:"eventType,omitempty" tf:"event_type,omitempty"`

	// value properties to be attached to the triggered event. (see below for nested schema)
	// Set of additional key-value properties to be attached to the triggered event.
	Metadata []MetadataObservation `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// (String) The title of the event to trigger.
	// The title of the event to trigger.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`
}

type EventTemplateParameters struct {

	// (Boolean) Davis® AI will try to merge this event into existing problems, otherwise a new problem will always be created.
	// Davis® AI will try to merge this event into existing problems, otherwise a new problem will always be created.
	// +kubebuilder:validation:Optional
	DavisMerge *bool `json:"davisMerge,omitempty" tf:"davis_merge,omitempty"`

	// (String) The description of the event to trigger.
	// The description of the event to trigger.
	// +kubebuilder:validation:Optional
	Description *string `json:"description" tf:"description,omitempty"`

	// (String) Possible Values: AVAILABILITY, CUSTOM_ALERT, CUSTOM_ANNOTATION, CUSTOM_CONFIGURATION, CUSTOM_DEPLOYMENT, ERROR, INFO, MARKED_FOR_TERMINATION, RESOURCE, SLOWDOWN
	// Possible Values: `AVAILABILITY`, `CUSTOM_ALERT`, `CUSTOM_ANNOTATION`, `CUSTOM_CONFIGURATION`, `CUSTOM_DEPLOYMENT`, `ERROR`, `INFO`, `MARKED_FOR_TERMINATION`, `RESOURCE`, `SLOWDOWN`
	// +kubebuilder:validation:Optional
	EventType *string `json:"eventType" tf:"event_type,omitempty"`

	// value properties to be attached to the triggered event. (see below for nested schema)
	// Set of additional key-value properties to be attached to the triggered event.
	// +kubebuilder:validation:Optional
	Metadata []MetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// (String) The title of the event to trigger.
	// The title of the event to trigger.
	// +kubebuilder:validation:Optional
	Title *string `json:"title" tf:"title,omitempty"`
}

type EventsInitParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Controls the preferred entity type used for triggered events.
	// Controls the preferred entity type used for triggered events.
	EventEntityDimensionKey *string `json:"eventEntityDimensionKey,omitempty" tf:"event_entity_dimension_key,omitempty"`

	// (Block List, Min: 1, Max: 1) Event template (see below for nested schema)
	// Event template
	EventTemplate []EventTemplateInitParameters `json:"eventTemplate,omitempty" tf:"event_template,omitempty"`

	// (String) Config id
	// Config id
	LegacyID *string `json:"legacyId,omitempty" tf:"legacy_id,omitempty"`

	// (Block List, Min: 1, Max: 1) Monitoring strategy (see below for nested schema)
	// Monitoring strategy
	ModelProperties []ModelPropertiesInitParameters `json:"modelProperties,omitempty" tf:"model_properties,omitempty"`

	// (Block List, Min: 1, Max: 1) Query definition (see below for nested schema)
	// Query definition
	QueryDefinition []QueryDefinitionInitParameters `json:"queryDefinition,omitempty" tf:"query_definition,omitempty"`

	// (String) The textual summary of the metric event entry
	// The textual summary of the metric event entry
	Summary *string `json:"summary,omitempty" tf:"summary,omitempty"`
}

type EventsObservation struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Controls the preferred entity type used for triggered events.
	// Controls the preferred entity type used for triggered events.
	EventEntityDimensionKey *string `json:"eventEntityDimensionKey,omitempty" tf:"event_entity_dimension_key,omitempty"`

	// (Block List, Min: 1, Max: 1) Event template (see below for nested schema)
	// Event template
	EventTemplate []EventTemplateObservation `json:"eventTemplate,omitempty" tf:"event_template,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Config id
	// Config id
	LegacyID *string `json:"legacyId,omitempty" tf:"legacy_id,omitempty"`

	// (Block List, Min: 1, Max: 1) Monitoring strategy (see below for nested schema)
	// Monitoring strategy
	ModelProperties []ModelPropertiesObservation `json:"modelProperties,omitempty" tf:"model_properties,omitempty"`

	// (Block List, Min: 1, Max: 1) Query definition (see below for nested schema)
	// Query definition
	QueryDefinition []QueryDefinitionObservation `json:"queryDefinition,omitempty" tf:"query_definition,omitempty"`

	// (String) The textual summary of the metric event entry
	// The textual summary of the metric event entry
	Summary *string `json:"summary,omitempty" tf:"summary,omitempty"`
}

type EventsParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Controls the preferred entity type used for triggered events.
	// Controls the preferred entity type used for triggered events.
	// +kubebuilder:validation:Optional
	EventEntityDimensionKey *string `json:"eventEntityDimensionKey,omitempty" tf:"event_entity_dimension_key,omitempty"`

	// (Block List, Min: 1, Max: 1) Event template (see below for nested schema)
	// Event template
	// +kubebuilder:validation:Optional
	EventTemplate []EventTemplateParameters `json:"eventTemplate,omitempty" tf:"event_template,omitempty"`

	// (String) Config id
	// Config id
	// +kubebuilder:validation:Optional
	LegacyID *string `json:"legacyId,omitempty" tf:"legacy_id,omitempty"`

	// (Block List, Min: 1, Max: 1) Monitoring strategy (see below for nested schema)
	// Monitoring strategy
	// +kubebuilder:validation:Optional
	ModelProperties []ModelPropertiesParameters `json:"modelProperties,omitempty" tf:"model_properties,omitempty"`

	// (Block List, Min: 1, Max: 1) Query definition (see below for nested schema)
	// Query definition
	// +kubebuilder:validation:Optional
	QueryDefinition []QueryDefinitionParameters `json:"queryDefinition,omitempty" tf:"query_definition,omitempty"`

	// (String) The textual summary of the metric event entry
	// The textual summary of the metric event entry
	// +kubebuilder:validation:Optional
	Summary *string `json:"summary,omitempty" tf:"summary,omitempty"`
}

type FilterInitParameters struct {

	// (String) Dimension key
	// Dimension key
	DimensionKey *string `json:"dimensionKey,omitempty" tf:"dimension_key,omitempty"`

	// (String) Dimension value
	// Dimension value
	DimensionValue *string `json:"dimensionValue,omitempty" tf:"dimension_value,omitempty"`

	// (String) Possible Values: CONTAINS_CASE_SENSITIVE, DOES_NOT_CONTAIN_CASE_SENSITIVE, DOES_NOT_EQUAL, DOES_NOT_START_WITH, EQUALS, STARTS_WITH
	// Possible Values: `CONTAINS_CASE_SENSITIVE`, `DOES_NOT_CONTAIN_CASE_SENSITIVE`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS`, `STARTS_WITH`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`
}

type FilterObservation struct {

	// (String) Dimension key
	// Dimension key
	DimensionKey *string `json:"dimensionKey,omitempty" tf:"dimension_key,omitempty"`

	// (String) Dimension value
	// Dimension value
	DimensionValue *string `json:"dimensionValue,omitempty" tf:"dimension_value,omitempty"`

	// (String) Possible Values: CONTAINS_CASE_SENSITIVE, DOES_NOT_CONTAIN_CASE_SENSITIVE, DOES_NOT_EQUAL, DOES_NOT_START_WITH, EQUALS, STARTS_WITH
	// Possible Values: `CONTAINS_CASE_SENSITIVE`, `DOES_NOT_CONTAIN_CASE_SENSITIVE`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS`, `STARTS_WITH`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`
}

type FilterParameters struct {

	// (String) Dimension key
	// Dimension key
	// +kubebuilder:validation:Optional
	DimensionKey *string `json:"dimensionKey" tf:"dimension_key,omitempty"`

	// (String) Dimension value
	// Dimension value
	// +kubebuilder:validation:Optional
	DimensionValue *string `json:"dimensionValue" tf:"dimension_value,omitempty"`

	// (String) Possible Values: CONTAINS_CASE_SENSITIVE, DOES_NOT_CONTAIN_CASE_SENSITIVE, DOES_NOT_EQUAL, DOES_NOT_START_WITH, EQUALS, STARTS_WITH
	// Possible Values: `CONTAINS_CASE_SENSITIVE`, `DOES_NOT_CONTAIN_CASE_SENSITIVE`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS`, `STARTS_WITH`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`
}

type MetadataInitParameters struct {

	// (String) Type 'dt.' for key hints.
	// Type 'dt.' for key hints.
	MetadataKey *string `json:"metadataKey,omitempty" tf:"metadata_key,omitempty"`

	// (String) no documentation available
	// no documentation available
	MetadataValue *string `json:"metadataValue,omitempty" tf:"metadata_value,omitempty"`
}

type MetadataObservation struct {

	// (String) Type 'dt.' for key hints.
	// Type 'dt.' for key hints.
	MetadataKey *string `json:"metadataKey,omitempty" tf:"metadata_key,omitempty"`

	// (String) no documentation available
	// no documentation available
	MetadataValue *string `json:"metadataValue,omitempty" tf:"metadata_value,omitempty"`
}

type MetadataParameters struct {

	// (String) Type 'dt.' for key hints.
	// Type 'dt.' for key hints.
	// +kubebuilder:validation:Optional
	MetadataKey *string `json:"metadataKey" tf:"metadata_key,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	MetadataValue *string `json:"metadataValue" tf:"metadata_value,omitempty"`
}

type ModelPropertiesInitParameters struct {

	// (String) Possible Values: ABOVE, BELOW, OUTSIDE
	// Possible Values: `ABOVE`, `BELOW`, `OUTSIDE`
	AlertCondition *string `json:"alertCondition,omitempty" tf:"alert_condition,omitempty"`

	// (Boolean) The ability to set an alert on missing data in a metric. When enabled, missing data samples will contribute as violating samples defined in advanced model properties. We recommend to not alert on missing data for sparse timeseries as this leads to alert spam.
	// The ability to set an alert on missing data in a metric. When enabled, missing data samples will contribute as violating samples defined in advanced model properties. We recommend to not alert on missing data for sparse timeseries as this leads to alert spam.
	AlertOnNoData *bool `json:"alertOnNoData,omitempty" tf:"alert_on_no_data,omitempty"`

	// minute samples within the evaluation window that must go back to normal to close the event.
	// The number of one-minute samples within the evaluation window that must go back to normal to close the event.
	DealertingSamples *float64 `json:"dealertingSamples,omitempty" tf:"dealerting_samples,omitempty"`

	// minute samples that form the sliding evaluation window.
	// The number of one-minute samples that form the sliding evaluation window.
	Samples *float64 `json:"samples,omitempty" tf:"samples,omitempty"`

	// (Number) Controls how many times the signal fluctuation is added to the baseline to produce the actual threshold for alerting
	// Controls how many times the signal fluctuation is added to the baseline to produce the actual threshold for alerting
	SignalFluctuation *float64 `json:"signalFluctuation,omitempty" tf:"signal_fluctuation,omitempty"`

	// (Number) Raise an event if this value is violated
	// Raise an event if this value is violated
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// (Number) Controls the width of the confidence band and larger values lead to a less sensitive model
	// Controls the width of the confidence band and larger values lead to a less sensitive model
	Tolerance *float64 `json:"tolerance,omitempty" tf:"tolerance,omitempty"`

	// (String) Possible Values: AUTO_ADAPTIVE_THRESHOLD, SEASONAL_BASELINE, STATIC_THRESHOLD
	// Possible Values: `AUTO_ADAPTIVE_THRESHOLD`, `SEASONAL_BASELINE`, `STATIC_THRESHOLD`
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// minute samples within the evaluation window that must violate to trigger an event.
	// The number of one-minute samples within the evaluation window that must violate to trigger an event.
	ViolatingSamples *float64 `json:"violatingSamples,omitempty" tf:"violating_samples,omitempty"`
}

type ModelPropertiesObservation struct {

	// (String) Possible Values: ABOVE, BELOW, OUTSIDE
	// Possible Values: `ABOVE`, `BELOW`, `OUTSIDE`
	AlertCondition *string `json:"alertCondition,omitempty" tf:"alert_condition,omitempty"`

	// (Boolean) The ability to set an alert on missing data in a metric. When enabled, missing data samples will contribute as violating samples defined in advanced model properties. We recommend to not alert on missing data for sparse timeseries as this leads to alert spam.
	// The ability to set an alert on missing data in a metric. When enabled, missing data samples will contribute as violating samples defined in advanced model properties. We recommend to not alert on missing data for sparse timeseries as this leads to alert spam.
	AlertOnNoData *bool `json:"alertOnNoData,omitempty" tf:"alert_on_no_data,omitempty"`

	// minute samples within the evaluation window that must go back to normal to close the event.
	// The number of one-minute samples within the evaluation window that must go back to normal to close the event.
	DealertingSamples *float64 `json:"dealertingSamples,omitempty" tf:"dealerting_samples,omitempty"`

	// minute samples that form the sliding evaluation window.
	// The number of one-minute samples that form the sliding evaluation window.
	Samples *float64 `json:"samples,omitempty" tf:"samples,omitempty"`

	// (Number) Controls how many times the signal fluctuation is added to the baseline to produce the actual threshold for alerting
	// Controls how many times the signal fluctuation is added to the baseline to produce the actual threshold for alerting
	SignalFluctuation *float64 `json:"signalFluctuation,omitempty" tf:"signal_fluctuation,omitempty"`

	// (Number) Raise an event if this value is violated
	// Raise an event if this value is violated
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// (Number) Controls the width of the confidence band and larger values lead to a less sensitive model
	// Controls the width of the confidence band and larger values lead to a less sensitive model
	Tolerance *float64 `json:"tolerance,omitempty" tf:"tolerance,omitempty"`

	// (String) Possible Values: AUTO_ADAPTIVE_THRESHOLD, SEASONAL_BASELINE, STATIC_THRESHOLD
	// Possible Values: `AUTO_ADAPTIVE_THRESHOLD`, `SEASONAL_BASELINE`, `STATIC_THRESHOLD`
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// minute samples within the evaluation window that must violate to trigger an event.
	// The number of one-minute samples within the evaluation window that must violate to trigger an event.
	ViolatingSamples *float64 `json:"violatingSamples,omitempty" tf:"violating_samples,omitempty"`
}

type ModelPropertiesParameters struct {

	// (String) Possible Values: ABOVE, BELOW, OUTSIDE
	// Possible Values: `ABOVE`, `BELOW`, `OUTSIDE`
	// +kubebuilder:validation:Optional
	AlertCondition *string `json:"alertCondition" tf:"alert_condition,omitempty"`

	// (Boolean) The ability to set an alert on missing data in a metric. When enabled, missing data samples will contribute as violating samples defined in advanced model properties. We recommend to not alert on missing data for sparse timeseries as this leads to alert spam.
	// The ability to set an alert on missing data in a metric. When enabled, missing data samples will contribute as violating samples defined in advanced model properties. We recommend to not alert on missing data for sparse timeseries as this leads to alert spam.
	// +kubebuilder:validation:Optional
	AlertOnNoData *bool `json:"alertOnNoData" tf:"alert_on_no_data,omitempty"`

	// minute samples within the evaluation window that must go back to normal to close the event.
	// The number of one-minute samples within the evaluation window that must go back to normal to close the event.
	// +kubebuilder:validation:Optional
	DealertingSamples *float64 `json:"dealertingSamples" tf:"dealerting_samples,omitempty"`

	// minute samples that form the sliding evaluation window.
	// The number of one-minute samples that form the sliding evaluation window.
	// +kubebuilder:validation:Optional
	Samples *float64 `json:"samples" tf:"samples,omitempty"`

	// (Number) Controls how many times the signal fluctuation is added to the baseline to produce the actual threshold for alerting
	// Controls how many times the signal fluctuation is added to the baseline to produce the actual threshold for alerting
	// +kubebuilder:validation:Optional
	SignalFluctuation *float64 `json:"signalFluctuation,omitempty" tf:"signal_fluctuation,omitempty"`

	// (Number) Raise an event if this value is violated
	// Raise an event if this value is violated
	// +kubebuilder:validation:Optional
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// (Number) Controls the width of the confidence band and larger values lead to a less sensitive model
	// Controls the width of the confidence band and larger values lead to a less sensitive model
	// +kubebuilder:validation:Optional
	Tolerance *float64 `json:"tolerance,omitempty" tf:"tolerance,omitempty"`

	// (String) Possible Values: AUTO_ADAPTIVE_THRESHOLD, SEASONAL_BASELINE, STATIC_THRESHOLD
	// Possible Values: `AUTO_ADAPTIVE_THRESHOLD`, `SEASONAL_BASELINE`, `STATIC_THRESHOLD`
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// minute samples within the evaluation window that must violate to trigger an event.
	// The number of one-minute samples within the evaluation window that must violate to trigger an event.
	// +kubebuilder:validation:Optional
	ViolatingSamples *float64 `json:"violatingSamples" tf:"violating_samples,omitempty"`
}

type QueryDefinitionInitParameters struct {

	// (String) Possible Values: AVG, COUNT, MAX, MEDIAN, MIN, PERCENTILE90, SUM, VALUE
	// Possible Values: `AVG`, `COUNT`, `MAX`, `MEDIAN`, `MIN`, `PERCENTILE90`, `SUM`, `VALUE`
	Aggregation *string `json:"aggregation,omitempty" tf:"aggregation,omitempty"`

	// (Block List, Max: 1) Dimension filter (see below for nested schema)
	// Dimension filter
	DimensionFilter []DimensionFilterInitParameters `json:"dimensionFilter,omitempty" tf:"dimension_filter,omitempty"`

	// based filters to define the scope this event monitors. (see below for nested schema)
	// Use rule-based filters to define the scope this event monitors.
	EntityFilter []EntityFilterInitParameters `json:"entityFilter,omitempty" tf:"entity_filter,omitempty"`

	// (String) The legacy_id of a Management Zone (as provided by the resource dynatrace_management_zone_v2 or the data source dynatrace_management_zone)
	// The `legacy_id` of a Management Zone (as provided by the resource `dynatrace_management_zone_v2` or the data source `dynatrace_management_zone`)
	ManagementZone *string `json:"managementZone,omitempty" tf:"management_zone,omitempty"`

	// (String) Metric key
	// Metric key
	MetricKey *string `json:"metricKey,omitempty" tf:"metric_key,omitempty"`

	// (String) To learn more, visit Metric Selector
	// To learn more, visit [Metric Selector](https://dt-url.net/metselad)
	MetricSelector *string `json:"metricSelector,omitempty" tf:"metric_selector,omitempty"`

	// (Number) Minute offset of sliding evaluation window for metrics with latency
	// Minute offset of sliding evaluation window for metrics with latency
	QueryOffset *float64 `json:"queryOffset,omitempty" tf:"query_offset,omitempty"`

	// (String) Possible Values: AUTO_ADAPTIVE_THRESHOLD, SEASONAL_BASELINE, STATIC_THRESHOLD
	// Possible Values: `METRIC_KEY`, `METRIC_SELECTOR`
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type QueryDefinitionObservation struct {

	// (String) Possible Values: AVG, COUNT, MAX, MEDIAN, MIN, PERCENTILE90, SUM, VALUE
	// Possible Values: `AVG`, `COUNT`, `MAX`, `MEDIAN`, `MIN`, `PERCENTILE90`, `SUM`, `VALUE`
	Aggregation *string `json:"aggregation,omitempty" tf:"aggregation,omitempty"`

	// (Block List, Max: 1) Dimension filter (see below for nested schema)
	// Dimension filter
	DimensionFilter []DimensionFilterObservation `json:"dimensionFilter,omitempty" tf:"dimension_filter,omitempty"`

	// based filters to define the scope this event monitors. (see below for nested schema)
	// Use rule-based filters to define the scope this event monitors.
	EntityFilter []EntityFilterObservation `json:"entityFilter,omitempty" tf:"entity_filter,omitempty"`

	// (String) The legacy_id of a Management Zone (as provided by the resource dynatrace_management_zone_v2 or the data source dynatrace_management_zone)
	// The `legacy_id` of a Management Zone (as provided by the resource `dynatrace_management_zone_v2` or the data source `dynatrace_management_zone`)
	ManagementZone *string `json:"managementZone,omitempty" tf:"management_zone,omitempty"`

	// (String) Metric key
	// Metric key
	MetricKey *string `json:"metricKey,omitempty" tf:"metric_key,omitempty"`

	// (String) To learn more, visit Metric Selector
	// To learn more, visit [Metric Selector](https://dt-url.net/metselad)
	MetricSelector *string `json:"metricSelector,omitempty" tf:"metric_selector,omitempty"`

	// (Number) Minute offset of sliding evaluation window for metrics with latency
	// Minute offset of sliding evaluation window for metrics with latency
	QueryOffset *float64 `json:"queryOffset,omitempty" tf:"query_offset,omitempty"`

	// (String) Possible Values: AUTO_ADAPTIVE_THRESHOLD, SEASONAL_BASELINE, STATIC_THRESHOLD
	// Possible Values: `METRIC_KEY`, `METRIC_SELECTOR`
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type QueryDefinitionParameters struct {

	// (String) Possible Values: AVG, COUNT, MAX, MEDIAN, MIN, PERCENTILE90, SUM, VALUE
	// Possible Values: `AVG`, `COUNT`, `MAX`, `MEDIAN`, `MIN`, `PERCENTILE90`, `SUM`, `VALUE`
	// +kubebuilder:validation:Optional
	Aggregation *string `json:"aggregation,omitempty" tf:"aggregation,omitempty"`

	// (Block List, Max: 1) Dimension filter (see below for nested schema)
	// Dimension filter
	// +kubebuilder:validation:Optional
	DimensionFilter []DimensionFilterParameters `json:"dimensionFilter,omitempty" tf:"dimension_filter,omitempty"`

	// based filters to define the scope this event monitors. (see below for nested schema)
	// Use rule-based filters to define the scope this event monitors.
	// +kubebuilder:validation:Optional
	EntityFilter []EntityFilterParameters `json:"entityFilter,omitempty" tf:"entity_filter,omitempty"`

	// (String) The legacy_id of a Management Zone (as provided by the resource dynatrace_management_zone_v2 or the data source dynatrace_management_zone)
	// The `legacy_id` of a Management Zone (as provided by the resource `dynatrace_management_zone_v2` or the data source `dynatrace_management_zone`)
	// +kubebuilder:validation:Optional
	ManagementZone *string `json:"managementZone,omitempty" tf:"management_zone,omitempty"`

	// (String) Metric key
	// Metric key
	// +kubebuilder:validation:Optional
	MetricKey *string `json:"metricKey,omitempty" tf:"metric_key,omitempty"`

	// (String) To learn more, visit Metric Selector
	// To learn more, visit [Metric Selector](https://dt-url.net/metselad)
	// +kubebuilder:validation:Optional
	MetricSelector *string `json:"metricSelector,omitempty" tf:"metric_selector,omitempty"`

	// (Number) Minute offset of sliding evaluation window for metrics with latency
	// Minute offset of sliding evaluation window for metrics with latency
	// +kubebuilder:validation:Optional
	QueryOffset *float64 `json:"queryOffset,omitempty" tf:"query_offset,omitempty"`

	// (String) Possible Values: AUTO_ADAPTIVE_THRESHOLD, SEASONAL_BASELINE, STATIC_THRESHOLD
	// Possible Values: `METRIC_KEY`, `METRIC_SELECTOR`
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

// EventsSpec defines the desired state of Events
type EventsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EventsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EventsInitParameters `json:"initProvider,omitempty"`
}

// EventsStatus defines the observed state of Events.
type EventsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EventsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Events is the Schema for the Eventss API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type Events struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.eventTemplate) || (has(self.initProvider) && has(self.initProvider.eventTemplate))",message="spec.forProvider.eventTemplate is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.modelProperties) || (has(self.initProvider) && has(self.initProvider.modelProperties))",message="spec.forProvider.modelProperties is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.queryDefinition) || (has(self.initProvider) && has(self.initProvider.queryDefinition))",message="spec.forProvider.queryDefinition is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.summary) || (has(self.initProvider) && has(self.initProvider.summary))",message="spec.forProvider.summary is a required parameter"
	Spec   EventsSpec   `json:"spec"`
	Status EventsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EventsList contains a list of Eventss
type EventsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Events `json:"items"`
}

// Repository type metadata.
var (
	Events_Kind             = "Events"
	Events_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Events_Kind}.String()
	Events_KindAPIVersion   = Events_Kind + "." + CRDGroupVersion.String()
	Events_GroupVersionKind = CRDGroupVersion.WithKind(Events_Kind)
)

func init() {
	SchemeBuilder.Register(&Events{}, &EventsList{})
}
